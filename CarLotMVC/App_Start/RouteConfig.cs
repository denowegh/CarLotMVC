using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Web.Routing;

namespace CarLotMVC
{
    /*Маршрутизация — это способ, которым MVC сопоставляет запросы URL с контроллерами и действиями в приложении,*/
    public class RouteConfig
    {
        public static void RegisterRoutes(RouteCollection routes)
        {
            /*Первая строка кода указывает механизму маршрутизации на необходимость игнорирования запросов, имеющих
             * расширение . axd, которое обозначает обработчик HTTP (HttpHandler). Метод IgnoreRoute () передает
             * запрос веб-серверу, в данном случае IIS. Шаблон { *pathinfo} поддерживает переменное количество
             * параметров, охватывая любой URL, который включает обработчик HTTP.*/
            routes.IgnoreRoute("{resource}.axd/{*pathInfo}");
            /*Одним из преимуществ маршрутизации является возможность придания URL формы, удобной для пользователей, что 
             * позволяет создавать URL, которые легко запоминать и искать с помощью поисковых механизмов.*/
            routes.MapRoute("Contact", "Contact/{*pathInfo}",/*добавление {*pathinfo} позволит 
                                                              * указывать любое количество дополнительных параметров URL.*/
                new { controller = "Home", action = "Contact" });//Такой URL легко запоминается пользователями, и даже если они
                                                                 //допишут к нему дополнительные ненужные данные, то все равно
                                                                 //будут попадать на искомую страницу.
            routes.MapRoute("About", "About/{*pathInfo}",
                            new { controller = "Home", action = "About" });

            /*Метод MapRoute () добавляет запись в таблицу маршрутов. В вызове указывается имя, шаблон URL 
             * и любые стандартные значения для переменных в шаблоне URL.*/
            routes.MapRoute(
                name: "Default",
                url: "{controller}/{action}/{id}",
                defaults: new { controller = "Home", action = "Index", id = UrlParameter.Optional }/*В параметре defaults 
                                                                                                    * указано, каким образом 
                                                                                                    * заполнять пустые фрагменты 
                                                                                                    * в URL, которые содержат не 
                                                                                                    * все определенные компоненты.*/
                /*Параметру defaults присуща поступательность, т.е. он допускает исключение справа налево.
                 * Однако пропускать части маршрута не разрешено.*/
            );
            
        }
        /*Запрошенный URL проверяется на соответствие с таблицей маршрутов. 
         * При наличии совпадения надлежащий код выполняется. */

        /*Важно отметить, что процесс сопоставления является последовательным и упорядоченным. Он проверяет URL на 
         * соответствие с записями коллекции в порядке их добавления. Процесс останавливается, когда найдено первое 
         * совпадение; совершенно не имеет значения, что дальше в таблице маршрутов может обнаружиться лучшее совпадение.
         * При добавлении записей в таблицу маршрутов следует помнить об указанном факторе. Обратите внимание, что маршрут 
         * не содержит адрес сервера (или домена). Веб-сервер IIS автоматически добавляет корректную информацию перед 
         * определенными параметрами маршрута.*/
    }
}

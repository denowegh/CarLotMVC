@model AutoLotDALModels.Models.Inventory
@*Если только вы не строите сайт, предназначенный целиком для маркетинговых целей, то получение данных от пользователя
    через формы будет жизненно важным компонентом разработки веб-приложений. С учетом сказанного необходимо ближе ознакомиться
    со вспомогательными методами HTML по имени BeginForm () и AntiForgeryToken ().*@
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@*Вспомогательный метод HTML по имени BeginForm () создает дескриптор <form> в выводе HTML. По умолчанию свойство action формы
    получает текущий URL, а свойство method — post (оба свойства допускают настройку за счет применения разных перегруженных
    версий метода BeginForm ()). Блок using в коде Razor будет инкапсулировать все, что указано между фигурными
    скобками, внутри сгенерированных открывающего и закрывающего дескрипторов HTML.*@
@using (Html.BeginForm())
{
    @*Вспомните, что атрибут [ValidateAntiForgeryToken] должен добавляться ко всем методам действий HttpPost (и по умолчанию 
        он добавляется, когда используются встроенные шаблонные представления). Вспомогательный метод HTML по имени
        AntiForgeryToken () создает значение клиентской стороны, которое контролируется проверкой достоверности серверной 
        стороны. Если значения не совпадают, то запрос отклоняется.*@
    @Html.AntiForgeryToken()
    @Html.EditorForModel()
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
